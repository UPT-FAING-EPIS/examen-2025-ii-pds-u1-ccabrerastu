name: Build and Deploy App

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend/Exam.Api
          file: ./backend/Exam.Api/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY }}/examapp-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY }}/examapp-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to server (example via SSH)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.REGISTRY }}/examapp-backend:latest
            docker pull ${{ secrets.REGISTRY }}/examapp-frontend:latest
            # Stop and recreate containers
            docker stop examapp-backend || true
            docker rm examapp-backend || true
            docker run -d --name examapp-backend \
              -e ConnectionStrings__DefaultConnection="${{ secrets.DB_CONN }}" \
              -p 5057:80 ${{ secrets.REGISTRY }}/examapp-backend:latest
            docker stop examapp-frontend || true
            docker rm examapp-frontend || true
            docker run -d --name examapp-frontend \
              -p 3000:80 ${{ secrets.REGISTRY }}/examapp-frontend:latest
